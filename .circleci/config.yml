version: 2.1
orbs:
  python: circleci/python@2.0.3
  aws-cli: circleci/aws-cli@4.1.2
  ansible-playbook: orbss/ansible-playbook@0.0.5

jobs:
  cfn-lint:
    executor: python/default
    steps:
      - checkout
      - run: pip install cfn-lint
      - run:
          name: run cfn-lint
          command: |
            cfn-lint -i W3002 -t cloudformation/*.yml

  deploy cloudformation:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: AWS_DEFAULT_REGION
      - run:
          name: Deploy cloudformation
          command: |
            aws cloudformation deploy --template-file cloudformation/lecture13_Network.yml --stack-name lecture13-Network
            aws cloudformation deploy --template-file cloudformation/lecture13_Security.yml --stack-name lecture13-Security --parameter-overrides MyIP=$MY_IP --capabilities CAPABILITY_IAM
            aws cloudformation deploy --template-file cloudformation/lecture13_Application.yml --stack-name lecture13-Application

  execute ansible:
    executor: ansible-playbook/default
    steps:
      - checkout
      - ansible-playbook/install:
          version: 2.10.7
      - add_ssh_keys:
          fingerprints:
            - SHA256:+hR6Ndo03rflwFLDW2fjpP3BcbWykJUc0MjkQGOtKBU
      - ansible-playbook/playbook:
          playbook: ansible/playbook.yml
          playbook-options: --private-key /home/circleci/.ssh/id_rsa -i ansible/inventory -e "ansible_cfg_path=ansible/ansible.cfg -u ec2-user" -vvv

workflows:
  raisetech:
    jobs:
      - cfn-lint
      - deploy cloudformation:
          requires:
            - cfn-lint
      - execute ansible:
          requires:
            - deploy cloudformation
